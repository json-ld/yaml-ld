{
  "@context": ["context.jsonld", {"@base": "basic-manifest"}],
  "@id": "",
  "@type": "mf:Manifest",
  "name": "Tests using YAML-LD JSON Profile",
  "description": "These tests implement the requirements for the [YAML-LD JSON Profile](https://json-ld.github.io/yaml-ld/spec/#yaml-ld-json-profile).",
  "baseIri": "https://json-ld.github.io/yaml-ld/tests/",
  "sequence": [
    {
      "@id":  "#cir-document-content-1-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Document with scalar content.",
      "purpose": "Document content MUST be sequence or mapping.",
      "req": "must",
      "input": "cases/cir-document-content-1-negative-in.yamlld",
      "expectErrorCode": "loading document failed"
    },
    {
      "@id":  "#cir-mapping-key-1-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Mapping with integer key.",
      "purpose": "A mapping key MUST be a string.",
      "req": "must",
      "input": "cases/mapping-key-must-be-string/integer.yamlld",
      "expectErrorCode": "mapping-key-error"
    },
    {
      "@id":  "#cir-mapping-key-2-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Mapping with an object key.",
      "purpose": "A mapping key MUST be a string.",
      "req": "must",
      "input": "cases/mapping-key-must-be-string/object.yamlld",
      "expectErrorCode": "mapping-key-error"
    },
    {
      "@id":  "#cir-mapping-key-3-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Mapping with a list key.",
      "purpose": "A mapping key MUST be a string.",
      "req": "must",
      "input": "cases/mapping-key-must-be-string/list.yamlld",
      "expectErrorCode": "mapping-key-error"
    },
    {
      "@id":  "#cir-mapping-key-4-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Mapping with a float key.",
      "purpose": "A mapping key MUST be a string.",
      "req": "must",
      "input": "cases/mapping-key-must-be-string/float.yamlld",
      "expectErrorCode": "mapping-key-error"
    },
    {
      "@id": "#cir-scalar-core-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "tag:yaml.org.2002 scalars",
      "purpose": "Otherwise, the conversion result is mapped through the YAML Core Schema.",
      "req": "must",
      "input": "cases/cir-scalar-core-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-core-1-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-i18n-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "language-tagged string with i18n",
      "purpose": "Otherwise, the conversion result is mapped through the YAML Core Schema.",
      "req": "must",
      "input": "cases/cir-scalar-i18n-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-i18n-1-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-other-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Scalars with other node tags",
      "purpose": "Otherwise, the conversion result is mapped through the YAML Core Schema.",
      "req": "must",
      "input": "cases/cir-scalar-other-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-other-1-positive-out.yamlld"
    },
    {
      "@id": "#cr-comments-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Various comment forms",
      "purpose": "Comments are white space.",
      "req": "must",
      "input": "cases/cr-comments-1-positive-in.yamlld",
      "expect": "cases/cr-comments-1-positive-out.yamlld"
    },
    {
      "@id": "#cr-utf8-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "UTF-8 BOM",
      "purpose": "A YAML-LD document MUST be encoded in UTF-8, to ensure interoperability with [[JSON]].",
      "req": "must",
      "input": "cases/cr-utf8-1-positive-in.yamlld",
      "expect": "cases/cr-utf8-1-positive-out.yamlld"
    },
    {
      "@id": "#cr-utf8-2-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "UTF-16 BOM",
      "purpose": "A YAML-LD document MUST be encoded in UTF-8, to ensure interoperability with [[JSON]].",
      "req": "must",
      "input": "cases/cr-utf8-2-negative-in.yamlld",
      "expectErrorCode": "invalid encoding"
    },
    {
      "@id": "#cr-well-formed-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Load a well-formed document",
      "purpose": "All YAML-LD streams MUST form a well-formed stream.",
      "req": "must",
      "input": "cases/cr-well-formed-1-positive-in.yamlld",
      "expect": "cases/cr-well-formed-1-positive-out.yamlld"
    },
    {
      "@id": "#cr-well-formed-2-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Fail to load a non-well-formed stream",
      "purpose": "All YAML-LD streams MUST form a well-formed stream.",
      "req": "must",
      "input": "cases/cr-well-formed-2-negative-in.yamlld",
      "expectErrorCode": "loading document failed"
    },
    {
      "@id": "#aa-cycles-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Use of anchors and aliases",
      "purpose": "A YAML-LD document MAY contain anchored nodes and alias nodes.",
      "req": "may",
      "input": "cases/aa-cycles-1-positive-in.yamlld",
      "expect": "cases/aa-cycles-1-positive-out.yamlld"
    },
    {
      "@id": "#aa-cycles-2-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Anchors and aliases with cycles",
      "purpose": "A YAML-LD document ... MUST NOT contain cycles.",
      "req": "must",
      "input": "cases/aa-cycles-2-negative-in.yamlld",
      "expectErrorCode": "loading document failed"
    },
    {
      "@id": "#aa-cycles-3-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Alias node resolution",
      "purpose": "Alias nodes MUST be resolved by value to their target nodes.",
      "req": "must",
      "input": "cases/aa-cycles-3-positive-in.yamlld",
      "expect": "cases/aa-cycles-3-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-core-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "tag:yaml.org.2002 scalars",
      "purpose": "If t resolves with a prefix of `tag:yaml.org.2002:`, the conversion result is mapped through the YAML Core Schema.",
      "req": "must",
      "input": "cases/cir-scalar-core-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-core-1-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-core-2-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ToRDFTest"],
      "name": "tag:yaml.org.2002 scalars (RDF)",
      "purpose": "If t resolves with a prefix of `tag:yaml.org.2002:`, the conversion result is mapped through the YAML Core Schema.",
      "req": "must",
      "input": "cases/cir-scalar-core-2-positive-in.yamlld",
      "expect": "cases/cir-scalar-core-2-positive-out.nq"
    },
    {
      "@id": "#cir-scalar-i18n-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "language-tagged string with i18n",
      "purpose": "If t resolves with a prefix of `https://www.w3.org/ns/i18n#`, and the suffix <strong>does not</strong> contain an underscore, the conversion result is a language-tagged string.",
      "req": "must",
      "input": "cases/cir-scalar-i18n-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-i18n-1-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-other-1-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ExpandTest"],
      "name": "Scalars with other node tags",
      "purpose": "Otherwise, the conversion result is an RDF literal.",
      "req": "must",
      "input": "cases/cir-scalar-other-1-positive-in.yamlld",
      "expect": "cases/cir-scalar-other-1-positive-out.yamlld"
    },
    {
      "@id": "#cir-scalar-other-2-positive",
      "@type": ["jld:PositiveEvaluationTest", "jld:ToRDFTest"],
      "name": "Scalars with other node tags (RDF)",
      "purpose": "Otherwise, the conversion result is an RDF literal.",
      "req": "must",
      "input": "cases/cir-scalar-other-2-positive-in.yamlld",
      "expect": "cases/cir-scalar-other-2-positive-out.nq"
    },
    {
      "@id": "#cr-well-formed-3-negative",
      "@type": ["jld:NegativeEvaluationTest", "jld:ExpandTest"],
      "name": "Undefined alias",
      "purpose": "All document MUST use node aliases defined by a previous node.",
      "req": "must",
      "input": "cases/cr-well-formed-3-negative-in.yamlld",
      "expectErrorCode": "loading document failed"
    }
  ]
}
